//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestClient.PollingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rules", Namespace="http://schemas.datacontract.org/2004/07/PollingService")]
    [System.SerializableAttribute()]
    public partial class Rules : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AgeLowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AgeUpperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> OccurenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RangeLowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RangeUpperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> TimeWindowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AgeLower {
            get {
                return this.AgeLowerField;
            }
            set {
                if ((this.AgeLowerField.Equals(value) != true)) {
                    this.AgeLowerField = value;
                    this.RaisePropertyChanged("AgeLower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AgeUpper {
            get {
                return this.AgeUpperField;
            }
            set {
                if ((this.AgeUpperField.Equals(value) != true)) {
                    this.AgeUpperField = value;
                    this.RaisePropertyChanged("AgeUpper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Occurence {
            get {
                return this.OccurenceField;
            }
            set {
                if ((this.OccurenceField.Equals(value) != true)) {
                    this.OccurenceField = value;
                    this.RaisePropertyChanged("Occurence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter {
            get {
                return this.ParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterField, value) != true)) {
                    this.ParameterField = value;
                    this.RaisePropertyChanged("Parameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RangeLower {
            get {
                return this.RangeLowerField;
            }
            set {
                if ((this.RangeLowerField.Equals(value) != true)) {
                    this.RangeLowerField = value;
                    this.RaisePropertyChanged("RangeLower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RangeUpper {
            get {
                return this.RangeUpperField;
            }
            set {
                if ((this.RangeUpperField.Equals(value) != true)) {
                    this.RangeUpperField = value;
                    this.RaisePropertyChanged("RangeUpper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> TimeWindow {
            get {
                return this.TimeWindowField;
            }
            set {
                if ((this.TimeWindowField.Equals(value) != true)) {
                    this.TimeWindowField = value;
                    this.RaisePropertyChanged("TimeWindow");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDetails", Namespace="http://schemas.datacontract.org/2004/07/PollingService")]
    [System.SerializableAttribute()]
    public partial class PersonDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActionUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecordTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionTaken {
            get {
                return this.ActionTakenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTakenField, value) != true)) {
                    this.ActionTakenField = value;
                    this.RaisePropertyChanged("ActionTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActionUpdated {
            get {
                return this.ActionUpdatedField;
            }
            set {
                if ((this.ActionUpdatedField.Equals(value) != true)) {
                    this.ActionUpdatedField = value;
                    this.RaisePropertyChanged("ActionUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter {
            get {
                return this.ParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterField, value) != true)) {
                    this.ParameterField = value;
                    this.RaisePropertyChanged("Parameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Processed {
            get {
                return this.ProcessedField;
            }
            set {
                if ((this.ProcessedField.Equals(value) != true)) {
                    this.ProcessedField = value;
                    this.RaisePropertyChanged("Processed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Reading {
            get {
                return this.ReadingField;
            }
            set {
                if ((this.ReadingField.Equals(value) != true)) {
                    this.ReadingField = value;
                    this.RaisePropertyChanged("Reading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecordTime {
            get {
                return this.RecordTimeField;
            }
            set {
                if ((this.RecordTimeField.Equals(value) != true)) {
                    this.RecordTimeField = value;
                    this.RaisePropertyChanged("RecordTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PollingService.IServicePolling")]
    public interface IServicePolling {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePolling/InsertRules", ReplyAction="http://tempuri.org/IServicePolling/InsertRulesResponse")]
        int InsertRules(TestClient.PollingService.Rules value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePolling/InsertRules", ReplyAction="http://tempuri.org/IServicePolling/InsertRulesResponse")]
        System.Threading.Tasks.Task<int> InsertRulesAsync(TestClient.PollingService.Rules value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePolling/GetAllRules", ReplyAction="http://tempuri.org/IServicePolling/GetAllRulesResponse")]
        TestClient.PollingService.Rules[] GetAllRules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePolling/GetAllRules", ReplyAction="http://tempuri.org/IServicePolling/GetAllRulesResponse")]
        System.Threading.Tasks.Task<TestClient.PollingService.Rules[]> GetAllRulesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePolling/ApplyRule", ReplyAction="http://tempuri.org/IServicePolling/ApplyRuleResponse")]
        string ApplyRule(TestClient.PollingService.PersonDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePolling/ApplyRule", ReplyAction="http://tempuri.org/IServicePolling/ApplyRuleResponse")]
        System.Threading.Tasks.Task<string> ApplyRuleAsync(TestClient.PollingService.PersonDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePolling/GetUser", ReplyAction="http://tempuri.org/IServicePolling/GetUserResponse")]
        TestClient.PollingService.PersonDetails GetUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePolling/GetUser", ReplyAction="http://tempuri.org/IServicePolling/GetUserResponse")]
        System.Threading.Tasks.Task<TestClient.PollingService.PersonDetails> GetUserAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePollingChannel : TestClient.PollingService.IServicePolling, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePollingClient : System.ServiceModel.ClientBase<TestClient.PollingService.IServicePolling>, TestClient.PollingService.IServicePolling {
        
        public ServicePollingClient() {
        }
        
        public ServicePollingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePollingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePollingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePollingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertRules(TestClient.PollingService.Rules value) {
            return base.Channel.InsertRules(value);
        }
        
        public System.Threading.Tasks.Task<int> InsertRulesAsync(TestClient.PollingService.Rules value) {
            return base.Channel.InsertRulesAsync(value);
        }
        
        public TestClient.PollingService.Rules[] GetAllRules() {
            return base.Channel.GetAllRules();
        }
        
        public System.Threading.Tasks.Task<TestClient.PollingService.Rules[]> GetAllRulesAsync() {
            return base.Channel.GetAllRulesAsync();
        }
        
        public string ApplyRule(TestClient.PollingService.PersonDetails user) {
            return base.Channel.ApplyRule(user);
        }
        
        public System.Threading.Tasks.Task<string> ApplyRuleAsync(TestClient.PollingService.PersonDetails user) {
            return base.Channel.ApplyRuleAsync(user);
        }
        
        public TestClient.PollingService.PersonDetails GetUser(int userId) {
            return base.Channel.GetUser(userId);
        }
        
        public System.Threading.Tasks.Task<TestClient.PollingService.PersonDetails> GetUserAsync(int userId) {
            return base.Channel.GetUserAsync(userId);
        }
    }
}
